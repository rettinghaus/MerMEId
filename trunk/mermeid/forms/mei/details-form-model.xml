<xf:model xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xl="http://www.w3.org/1999/xlink">
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei"
        id="data-instance">
        <mei/>
    </xf:instance>

    <xf:instance xmlns="http://www.music-encoding.org/ns/mei"
        id="empty-instance" 
        xxf:readonly="true">
        <xi:include href="./model/empty_doc.xml"/> 
    </xf:instance>
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei"
        id="languages" 
        xxf:readonly="true">
        <xi:include href="./model/languages.xml"/> 
    </xf:instance>
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei" 
        id="bibl-type-instance" 
        xxf:readonly="true">
        <xi:include href="./model/bibl_reference_types.xml"/> 
    </xf:instance>
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei" 
        id="bibliography-instance">
        <mei/>
    </xf:instance>

    <xf:instance xmlns="http://www.music-encoding.org/ns/mei"
        id="ensembles">
        <mei/>
    </xf:instance>
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei"
        id="instruments">
        <mei/>
    </xf:instance>
    
    <xf:instance xmlns="http://www.music-encoding.org/ns/mei" 
        id="authority-instance">
        <mei/>
    </xf:instance>
    
    <xf:instance id="XMLfiles" 
        xmlns="http://www.kb.dk/dcm">
        <fileList/>
    </xf:instance>
        
    <xf:instance id="mei_attr_list">
        <xi:include href="./model/MEI_attr_list.xml"/> 
    </xf:instance>
    
    <xf:instance id="parameters" 
        xmlns="http://www.kb.dk/dcm"
        parse="xml">
        <xi:include href="mermeid_configuration.xml"/> 
    </xf:instance>
   
    <!-- Upload -->
    <xf:instance id="upload-instance" >
        <files>
            <file filename="" mediatype="" size=""/>
        </files>
    </xf:instance>
    <xf:bind nodeset="instance('upload-instance')/file" 
        type="xs:anyURI"
        constraint=". = ''"
    />
    
    <xf:instance id="uploadedFile">
        <mei xmlns="http://www.music-encoding.org/ns/mei"/>
    </xf:instance>
    
    <xf:submission id="load-uploaded-file"
        xxf:username=""
        xxf:password=""
        xxf:show-progress="false"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('temp')/target_uri}"
        replace="instance" 
        instance="uploadedFile">
    </xf:submission>
    <!-- end upload -->    
    
    <xf:instance id="temp">
        <temp>
            <id/>
            <counter/>
            <changed>false</changed>
            <change_marker>*</change_marker>
            <etc>...</etc>
            <target_uri/>
            <file_exists>true</file_exists>
            <counter/>
            <max/>
            <query/>
            <series/>
            <page/>
            <value/>
            <nodeset/>
            <path/>
            <element/>
        </temp>
    </xf:instance> 
      
    <!-- submissions - loading and saving data -->            
    
    <xf:submission id="load-data-submission" 
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('parameters')/dcm:crud_home}{instance('parameters')/dcm:xml_file}"
        replace="instance" 
        instance="data-instance"
        xxf:show-progress="true"/>
    
    <xf:submission id="load-empty-submission"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('temp')/target_uri}"
        replace="instance" instance="empty-instance"
        xxf:show-progress="true"/>

    <xf:submission id="load-fileList"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('temp')/target_uri}"
        replace="instance" 
        instance="XMLfiles"
        xxf:show-progress="true"/>
    
    <xf:submission id="load-bibliography"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('parameters')/dcm:library_crud_home}/standard_bibliography.xml"
        replace="instance" 
        instance="bibliography-instance"
        xxf:show-progress="true"/>

    <xf:submission id="load-authorities"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('parameters')/dcm:library_crud_home}/authority_files.xml"
        replace="instance" 
        xxf:show-progress="true"
        instance="authority-instance"/>
    
    <xf:submission id="load-ensembles"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('parameters')/dcm:library_crud_home}/ensembles.xml"
        replace="instance" 
        xxf:show-progress="true"
        instance="ensembles"/>
    
    <xf:submission id="load-instruments"
        method="get" 
        serialization="none" 
        validate="false"
        resource="{instance('parameters')/dcm:library_crud_home}/instruments.xml"
        replace="instance" 
        xxf:show-progress="true"
        instance="instruments"/>
    
    <xf:submission id="save-to-file"
        ref="instance('data-instance')"
        validate="true"
        relevant="false"
        xxf:calculate="false"
        resource="{instance('parameters')/dcm:crud_home}{instance('parameters')/dcm:xml_file}" 
        method="put"
        replace="instance"
        xxf:show-progress="true"/>
    
    
    <!-- "onload" xforms actions -->
    <xf:action ev:event="xforms-model-construct-done">
        <!-- store requested ID -->
        <xf:setvalue ref="instance('temp')/id" value="xxf:get-request-parameter('id')"/>
        <!-- store XML data file name -->
        <xf:setvalue ref="instance('parameters')/dcm:xml_file" value="xxf:get-request-parameter('doc')"/>
        <!-- store page URI -->
        <xf:setvalue ref="instance('parameters')/dcm:this_page" value="concat(
            instance('parameters')/dcm:orbeon_dir,'?uri=',xxf:get-request-parameter('uri'),
            '&amp;doc=',instance('parameters')/dcm:xml_file)"/>
        <!-- load reference data from library -->
        <xf:send submission="load-bibliography"/>
        <xf:send submission="load-authorities"/>
        <xf:send submission="load-ensembles"/>
        <xf:send submission="load-instruments"/>
        <!-- load XML data -->
        <xf:send submission="load-data-submission"/>
        <!-- load empty model XML data -->
        <xf:setvalue ref="instance('temp')/target_uri" value="concat(instance('parameters')/dcm:form_home,'model/empty_doc.xml')"/>
        <xf:send submission="load-empty-submission"/>
        <!-- get settings from session variables -->
        <xf:setvalue ref="instance('parameters')/dcm:show_id" value="xxf:get-session-attribute('show_id')"/>
        <xf:setvalue ref="instance('parameters')/dcm:attr_editor" value="xxf:get-session-attribute('attr_editor')"/>
        <xf:setvalue ref="instance('parameters')/dcm:code_inspector" value="xxf:get-session-attribute('code_inspector')"/> 
        <xf:setvalue ref="instance('parameters')/dcm:return_uri" value="xxf:get-session-attribute('return_uri')"/>
        <!-- construct "music component path" -->
        <!-- to do: combine movement numbers, titles, or tempos to identify components -->
        <xf:setvalue ref="instance('temp')/path" 
            value="string-join(instance('data-instance')//m:expression[descendant-or-self::m:expression/@xml:id=instance('temp')/id]//m:title,'/')"/>
        
        <!-- automatically add change entry in revisionDesc -->
        <xf:action if="count(instance('data-instance')/m:meiHead/m:revisionDesc/m:change)=0">
            <xf:insert context="instance('data-instance')/m:meiHead/m:revisionDesc" 
                nodeset="m:change" 
                origin="instance('empty-instance')/m:meiHead/m:revisionDesc/m:change"/>
        </xf:action>
        <xf:var name="last_revision" 
            select="instance('data-instance')/m:meiHead/m:revisionDesc/m:change[last()]"/>
        <xf:var name="today" select="substring-before(now(), 'T')"/>
        <xf:action if="$last_revision/@isodate!=$today or ($last_revision/@isodate=$today and ($last_revision/m:changeDesc/m:p/text() or $last_revision/@resp!=''))">
            <xf:action if="$last_revision/@isodate!=''">
                <xf:insert nodeset="instance('data-instance')/m:meiHead/m:revisionDesc/m:change" at="last()"
                    position="after" origin="instance('empty-instance')/m:meiHead/m:revisionDesc/m:change"/>
                <xf:setvalue ref="instance('data-instance')/m:meiHead/m:revisionDesc/m:change[last()]/@isodate"
                    value="$today"/>
            </xf:action>
            <xf:action if="$last_revision/@isodate=''">
                <xf:setvalue ref="instance('data-instance')/m:meiHead/m:revisionDesc/m:change[last()]/@isodate"
                    value="$today"/>
            </xf:action>
        </xf:action>
        <!-- end revisionDesc entry -->
        
    </xf:action>
    
    <xf:action ev:event="xforms-submit-done">
        <!-- set instance state to unchanged on saving -->
        <xf:setvalue ref="instance('temp')/changed" value="'false'"/>
    </xf:action>
    
    <xf:action ev:event="xforms-submit-error">
        <xf:var name="code" select="event('response-status-code')"/>
        <xf:action if="$code=200">
            <!-- error 200 is actually no error -->
            <xf:setvalue ref="instance('temp')/changed" value="'false'"/>
        </xf:action>
        <xf:action if="$code!=404 and $code!=200">
            <xf:message>An error occurred (<xf:output value="$code"/>)</xf:message>
        </xf:action>
    </xf:action>
    
</xf:model>



