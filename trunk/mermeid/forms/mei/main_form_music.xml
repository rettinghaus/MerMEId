<?xml version="1.0" encoding="UTF-8"?>
<h:div xmlns:h="http://www.w3.org/1999/xhtml" 
	xmlns:xf="http://www.w3.org/2002/xforms" 
	xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:xi="http://www.w3.org/2001/XInclude" 
	xmlns:dcm="http://www.kb.dk/dcm"
	xmlns:m="http://www.music-encoding.org/ns/mei" 
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/"
	id="music-div">
	
	<h:div class="inputdiv">
		
		<xf:group ref="instance('data-instance')/m:meiHead[not(m:workDesc/m:work/m:expressionList/m:expression)]">
			<h:div class="vertical_spacer"/>
			<dcm:create 
				nodeset="m:workDesc"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc"/>
			<dcm:create ref="m:workDesc"
				nodeset="m:work"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work"/>
			<dcm:create ref="m:workDesc/m:work"
				nodeset="m:expressionList"
				label="Add basic music metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList"/>
			<dcm:create ref="m:workDesc/m:work/m:expressionList"
				nodeset="m:expression"
				label="Add basic music metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression"/>
		</xf:group>
		
		<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:expressionList">
			
			<xf:repeat nodeset="m:expression" id="repeat-expression">
				
				<h:fieldset>
					<h:legend>Version
						<h:a class="help">&#160;?<h:span class="comment">Information at version level.<h:br/> 
							To create a new version, click the 'add' or 'copy' buttons on the right.<h:br/>
							To indicate the individual pieces (movements, acts or any other subdivision) in this work 
							or version, use 'Components' below.<h:br/>
							In FRBR terms, versions and components correspond to the 'expression' level.</h:span></h:a>
						<dcm:element-buttons 
							triggers="all" 
							nodeset="m:expression" 
							index="repeat-expression"
							origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]"/>
						<dcm:id/>
						<dcm:attribute-editor ref="."/>
					</h:legend>
					
					<xf:var name="num_ex" as="string" select="count(../m:expression)"/>
					<xf:var name="binding" select="."/>
					
					<!-- display expression-specific details at top level only if more than one expression or not empty -->
					<xf:group ref=".[number($num_ex)&gt;1 or m:titleStmt/m:title[normalize-space(.)!='']]">
						<h:div class="blocklabel" style="margin-top:10px">
							Version title
							<h:a class="help">&#160;?<h:span class="comment">E.g. 'Version for piano' or 
								'Discarded version'. Enter a version title only if you 
								want to distinguish different versions of the work. 
								Otherwise leave empty.</h:span></h:a>
						</h:div>
						<dcm:create nodeset="m:titleStmt"
							label="Add version title"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt"/>
						<xf:group ref="m:titleStmt">
							<xf:repeat nodeset="m:title" id="repeat-version-titles" class="input_group">
								<h:div>
									<xf:group ref=".[number($num_ex)=1 and .!='']">
										<h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" 
											alt="warning"/><h:span class="comment">
												When only one version is given, 
												no title should be entered at this level. <h:br/>
												If no alternative versions are added, please indicate the 
												title at work level (i.e., the 'Work' tab) instead.
											</h:span></h:a>
									</xf:group>
									<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>
									<xf:group ref=".[count(../m:title)&gt;1]">
										<dcm:element-buttons 
											triggers="all" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
									</xf:group>										
									<xf:group ref=".[count(../m:title)=1]">
										<dcm:element-buttons 
											triggers="up down copy add" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
										<xf:trigger appearance="minimal" class="non-standard_button editmenu">
											<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete row"/></xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:setvalue ref="." value="''"/>
											</xf:action>
										</xf:trigger>
									</xf:group>
									<dcm:attribute-editor ref="."/>
								</h:div>
							</xf:repeat>
						</xf:group>
					</xf:group>
					
					<xf:group ref=".[number($num_ex)&gt;1 or m:identifier[normalize-space(.)!='']]">
						<h:div class="blocklabel">Identification</h:div>
						<dcm:create 
							nodeset="m:identifier"
							label="Add identifier"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:identifier"/>
						<xf:group ref="m:identifier">
							<xf:group ref=".[number($num_ex)=1 and .!='']">
								<h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" 
									alt="warning"/><h:span class="comment">
										When only one version is given, 
										no version identifier should normally be entered.
									</h:span></h:a>
							</xf:group>
							<h:div class="blocklabel">
								<h:span class="fixed_width"> List name <h:a class="help">&#160;?<h:span class="comment">Name of a
									list, catalogue or other numbering system identifying this version (e.g. 'Opus',
									'CNW', 'BWV', 'Neue Mozart-Ausgabe' etc.)
								</h:span></h:a></h:span>
								<h:span class="fixed_width"> No. <h:a class="help">&#160;?<h:span class="comment">The work's number or
									signature in the list identifying it</h:span></h:a>
								</h:span>
							</h:div>
						</xf:group>
						<xf:repeat nodeset="m:identifier" id="work-id-repeat">
							<h:div>					
								<xf:input ref="@label" class="mediumshort"/>
								<xf:input ref="." class="mediumshort"/>
								<dcm:element-buttons 
									triggers="add remove" 
									nodeset="m:identifier" 
									index="work-id-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:identifier"/>
								<dcm:attribute-editor ref="."/>
							</h:div>
						</xf:repeat>
						
					</xf:group>
					
					<h:fieldset>
						<h:legend>Music metadata
							<h:a class="help">&#160;?<h:span class="comment">Use at this level only with single-movement works, 
								or to specify the main key of a work or version.  
							</h:span></h:a>
						</h:legend>
						
						<h:div>     
							<dcm:create 
								nodeset="m:tempo"
								label="Add tempo"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:tempo"/>
							<xf:input ref="m:tempo" class="maxlong">
								<xf:label class="fixed_width">Tempo</xf:label>
							</xf:input>
							<xf:trigger appearance="minimal" ref="m:tempo">
								<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:delete nodeset="."/>
								</xf:action>
							</xf:trigger>
							<dcm:attribute-editor ref="m:tempo"/>
							<h:br clear="all"/>  
							<xi:include href="includes/meter-input.xml" parse="xml"/>
							
							<h:br clear="all"/>
							<dcm:create 
								nodeset="m:key"
								label="Add main key"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:key"/>
							<xf:group ref="m:key">
								<xi:include href="includes/key_select.xml" parse="xml"/>
								<xf:trigger appearance="minimal">
									<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="."/>
									</xf:action>
								</xf:trigger>
								<dcm:attribute-editor/>
							</xf:group>
							<h:br clear="all"/>
							<dcm:create 
								nodeset="m:extent"
								label="Add extent"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:extent"/>
							<xf:repeat nodeset="m:extent" id="details-expression-extent-repeat">
								<h:div>
									<xf:input ref=".">
										<xf:label class="fixed_width_long">Extent (duration) <h:a class="help">&#160;?<h:span 
											class="comment">Extent in any medium: number of measures, pages, or the approximate duration, for instance. <br/>
											Duration can be indicated in any form, such as "01:23:00", "25'30''" or "approx. 10'". 
											The unit of measurement (measures, pages, minutes, etc.) may be specified in the  
											optional "unit" field.</h:span></h:a></xf:label>
									</xf:input>
									<xf:input ref="@unit">
										<xf:label>Unit <h:a class="help">&#160;?<h:span class="comment">Optional indication of the measurement unit, e.g. "min."
											<h:br/>Note: Please do not enter spaces in this field, as this is a so-called NMTOKEN type field. 
											Please use underscore _ instead.</h:span></h:a></xf:label>
									</xf:input>
									<!-- to make <extent> repeatable, add 'add' to triggers -->
									<dcm:element-buttons
										triggers="remove" 
										nodeset="m:extent" 
										index="details-expression-extent-repeat"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:extent"/>
									<dcm:attribute-editor/>
								</h:div>
							</xf:repeat>
							
						</h:div>   
						
						<h:div class="vertical_spacer"/>
						<h:span class="blocklabel strong">Incipits <h:a class="help">&#160;?<h:span class="comment">Both 
							music and text incipits may be added. Music incipits can be added as links to graphic files or
							entered using an encoding such as <em>Plaine &amp; Easie Code</em>. <br/>
							Incipits encoded in MEI will be displayed in the HTML preview but are not editable in MerMEId.
						</h:span></h:a></h:span>
						<dcm:create nodeset="m:incip"
							label="Add incipits"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip"/>
						
						<xi:include href="includes/incipit-input.xml" parse="xml"/>
						
					</h:fieldset>
					
					<h:fieldset>
						<h:legend>Persons <h:a class="help">&#160;?<h:span 
							class="comment">Persons with connection to this particular version
							only, e.g. an arranger, or a text author in a collection of songs 
							with different authors</h:span></h:a></h:legend>	
						<dcm:create nodeset="m:titleStmt"
							label="Add persons"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:titleStmt"/>
						<xf:group ref="m:titleStmt">
							<dcm:create 
								nodeset="m:respStmt"
								label="Add person"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:respStmt"/>
							<xf:group ref="m:respStmt">
								<xi:include href="includes/person-input.xml"/>
							</xf:group>
						</xf:group>
					</h:fieldset>
					
					
					<!-- Relations -->
						<h:fieldset>
							<h:legend>Relations <h:a class="help">&#160;?<h:span class="comment">Relations between this version and 
								other versions or files may be specified here to create links between them.<h:br/>
								For instance, if this version is a revision of an earlier version it may be specified here
								by selecting the 'is revision of'. <h:br/>
								On the target of the relation, you may want to add a link pointing to this one and defining 
								the relation as 'has revision' to make the linking bidirectional.<h:br/>
								The relation can also point to an external ressource such as an edition or digitization. 
								In that case select the 'has reproduction' relation.
							</h:span></h:a></h:legend>
							<dcm:create 
								nodeset="m:relationList"
								label="Add relation"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:relationList"/>
							<dcm:create ref="m:relationList" 
								nodeset="m:relation"
								label="Add relation"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:relationList/m:relation"/>
							
							
							<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
								<xf:repeat nodeset="m:relationList/m:relation" id="version_relations">
									<xf:var name="context_node" select="."/>
									<h:tr>
										<h:td>
											<h:span>This version </h:span>
											<xi:include href="includes/relation_select.xml" parse="xml"/>
											<xf:group ref="@target">
												<xf:input ref="." class="maxlong">
													<xf:label>URI <h:a class="help">&#160;?<h:span class="comment">The location of the linked ressource (target). 
														The target may be either an external file (such as 'http://www.example.org/some_file.xml'), an internal 
														reference to an element in the file you are editing (by XML ID, such as '#expression_1'), or a combination
														of both (like 'http://www.example.org/some_file.xml#expression_1'). <h:br/>
														The target URI may be entered manually or selected using the "Select file" button.<h:br/>
														Please note: in MerMEId's HTML preview, relative URIs are interpreted as being links to other 
														MEI files to be displayed as MerMEId previews as well. To avoid this, make the URI absolute 
														(i.e., starting with a protocol like "http://"). 
													</h:span></h:a>
													</xf:label>
												</xf:input>
												<xf:trigger>
													<xf:label>Select file...</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:setvalue ref="instance('temp')/nodeset" 
															value='"instance(&apos;data-instance&apos;)/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[index(&apos;repeat-expression&apos;)]/m:relationList/m:relation[index(&apos;version_relations&apos;)]"'/>
														<xxf:show dialog="relation_dialog"/>
														<xf:setvalue ref="instance('temp')/target_uri" value="concat(instance('parameters')/dcm:server_name,'storage/cross-link.xq?get=works')"/>
														<xf:send submission="load-fileList"/>
													</xf:action>
												</xf:trigger>
												<xf:trigger appearance="minimal">
													<xf:label><h:span style="vertical-align:bottom;"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/go_to_link.png" 
														title="Go to linked resource"/></h:span></xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:var name="uri" 
															select="concat(
															instance('parameters')/dcm:orbeon_dir,
															'?uri=',
															instance('parameters')/dcm:form_home,
															'edit-work-case.xml&amp;doc=',.)"/>
														<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
														<xxf:show dialog="leave-warning-dialog"></xxf:show>
													</xf:action>
												</xf:trigger>
											</xf:group>
										</h:td>
										<h:td>
											<xf:input ref="@label" class="long">
												<xf:label> Label <h:a class="help">&#160;?<h:span class="comment">The text to be 
													displayed as the link text (usually the title of the linked item)</h:span></h:a></xf:label>
											</xf:input>
										</h:td>
										<h:td style="vertical-align:top; white-space:nowrap;">
											<h:span class="editmenu">
												<dcm:element-buttons 
													triggers="up down add del-parent-with-last" 
													nodeset="m:relation" 
													index="version_relations"
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation"/>
												<dcm:attribute-editor ref="."/>
											</h:span>
										</h:td>
									</h:tr>
								</xf:repeat>
							</h:table>
						</h:fieldset>
					
					
					<h:fieldset>                                                     
						<h:legend>Instruments, singers and roles <h:a class="help">&#160;?<h:span 
							class="comment">Instruments and singers may be grouped into ensembles or specified
							as 'stand-alone' performers. A group of performers acting as an ensemble (including choirs)
							should be defined as such. Each ensemble may or may not have a name (label) for display, 
							and may or may not list its individual performers.<h:br/>
							Both ensembles and performers should have a MARC standard code added to improve
							data compatibility and interchange. Codes are selected from the dropdown menus.							
						</h:span></h:a>
							<dcm:id ref="m:perfMedium"/>
							<dcm:attribute-editor ref="m:perfMedium"/>
						</h:legend>
						
						<dcm:create  
							nodeset="m:perfMedium"
							label="Add instruments &amp; roles"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium"/>
						
						<xf:group ref="m:perfMedium">
							
							<dcm:create
								nodeset="m:instrumentation"
								label="Add instrumentation"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium/m:instrumentation"/>
							
							
							<!-- dialog for adding ensembles -->
							<xxf:dialog id="ensemble-menu" appearance="full" level="modal"
								close="true" draggable="true" visible="false">
								<xf:label>Ensembles</xf:label>
								<xf:repeat nodeset="instance('instrument-groups')/m:instrVoiceGrp[@code]" id="ensemble-menu-repeat">
									<xf:trigger submission="replace-form-with" appearance="minimal">
										<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add"/>
											<xf:output ref="if (m:head!='') then m:head else '[empty ensemble]'"/>
										</xf:label>
										<xf:action ev:event="DOMActivate">
											<xf:insert context="$binding/m:perfMedium/m:instrumentation" 
												nodeset="m:instrVoiceGrp"
												at="index('repeat-ensemble')"
												position="after" 
												origin="instance('instrument-groups')/m:instrVoiceGrp[@code][index('ensemble-menu-repeat')]"/>
											<!-- generate IDs for added performers -->
											<xf:insert xxf:iterate="//*[not(@xml:id)]"
												context="$binding/m:perfMedium/m:instrumentation"
												origin="xxf:attribute('xml:id',concat(name(.),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8)))"/>
											<xxf:hide dialog="ensemble-menu"/>
										</xf:action>
									</xf:trigger>
									<h:br/>
								</xf:repeat>
							</xxf:dialog>			
							
							<xf:group ref="m:instrumentation">
								<h:div class="blocklabel strong">Ensembles </h:div>
								<xf:trigger ref=".[count(m:instrVoiceGrp)=0]" class="create_button">
									<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/list.png" alt="Add from list"/> Add ensemble</xf:label>
									<xf:action ev:event="DOMActivate">
										<xxf:show dialog="ensemble-menu"/>
									</xf:action>
								</xf:trigger>
								<xf:repeat nodeset="m:instrVoiceGrp" id="repeat-ensemble">
									<h:fieldset>
										<h:legend>
											<xf:output value="if (m:head!='') then m:head else '[Ensemble]'"/> &#160;
											<dcm:element-buttons 
												triggers="up down" 
												nodeset="m:instrVoiceGrp" 
												origin="instance('instrument-groups')/m:instrVoiceGrp[1]"
												index="repeat-ensemble"/>
											<xf:trigger style="margin:0 -7px 0 -6px;"
												appearance="minimal" class="non-standard_button">
												<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add" title="Add ensemble"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xxf:show dialog="ensemble-menu"/>
												</xf:action>
											</xf:trigger>
											<h:span class="editmenu">
												<xxf:dialog id="delete-ensemble-dialog" appearance="full">
													<xf:label>There are references to this ensemble</xf:label>
													<xf:var name="thisid" select="@xml:id"/>
													<h:p><xf:output value="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoiceGrp[@n=$thisid])"/> 
														music component(s) (movements or sections defined below) refer to this
														ensemble.<h:br/>
														Do you want to delete all occurrences in components also?
													</h:p>
													<xf:trigger id="delete-ensemble-button">
														<xf:label>No, delete only at this level</xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:delete nodeset="."/>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xxf:hide dialog="delete-ensemble-dialog"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
													</xf:trigger>
													<xf:trigger id="delete-ensemble-button-all">
														<xf:label>Yes, delete all occurrences</xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:delete nodeset="."/>
															<xf:action xxf:iterate="ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoiceGrp[@n=$thisid]">
																<xf:delete nodeset="."/>
															</xf:action>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xxf:hide dialog="delete-ensemble-dialog"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
													</xf:trigger>
													<xf:trigger>
														<xf:label>Cancel</xf:label>
														<xf:action ev:event="DOMActivate">
															<xxf:hide dialog="delete-ensemble-dialog"/>
														</xf:action>
													</xf:trigger>
												</xxf:dialog>												
												<xf:trigger appearance="minimal">
													<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:var name="id" select="@xml:id"/>
														<xf:var name="no" select="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoiceGrp[@n=$id])"/>
														<xf:action if="$no = 0">
															<xf:delete nodeset="."/>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
														<xf:action if="$no != 0">
															<xxf:show dialog="delete-ensemble-dialog"/>
														</xf:action>
													</xf:action>
												</xf:trigger>
											</h:span>
											
											<dcm:id/>
											<dcm:attribute-editor/>
										</h:legend>
										<h:div class="vertical_spacer"/> 
										<h:div>
											<dcm:create 
												nodeset="m:head"
												label="Add ensemble heading"
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoiceGrp/m:head"/>
											<xf:input ref="m:head" class="long">
												<xf:label class="fixed_width">Heading <h:a class="help">&#160;?<h:span 
													class="comment">An optional heading or name wich may be used with or 
													instead of a detailed listing of the instruments in the ensemble. 
													Use it to specify the type of ensemble, e.g. 'Orchestra', 'String quartet', 
													'Choir', to give a general heading like 'Instrumentation' or 
													an orchestration string like '2.2.2.2/4.2.3.1/timp/str'.<h:br/> 
													If no heading has been entered, 
													a suggested ensemble name is automatically inserted when choosing
													a standard ensemble code in the last field.
												</h:span></h:a></xf:label>
											</xf:input>
											<xf:select1 ref="@code">
												<xf:label>Standard code <h:a class="help">&#160;?<h:span 
													class="comment">Choosing a standard MARC code improves data  
													compatibility and interchangeability with other systems. <h:br/>
													A code should be supplied also when you do not want the ensemble 
													to have a heading (name).
												</h:span></h:a></xf:label>
												<xf:itemset nodeset="instance('ensembles')/m:instrVoiceGrp">
													<xf:label><xf:output value="if (@code!='') then concat(@code, ' (',m:head,')') else '- Please select -'"/></xf:label>
													<xf:value ref="@code"/>
												</xf:itemset>
												<xf:action ev:event="xforms-value-changed">
													<xf:var name="ensemble" select="."/>
													<xf:action if="../m:head=''">
														<!-- set ensemble name if empty -->
														<xf:setvalue ref="../m:head" value="normalize-space(instance('ensembles')/m:instrVoiceGrp[@code=$ensemble])"/>
													</xf:action>
												</xf:action>
											</xf:select1>
											<dcm:attribute-editor ref="m:head"/>
										</h:div>
										<h:div class="vertical_spacer"/>
										
										<!-- performers within an ensemble -->
										
										<!-- dialog for adding performers to existing ensembles -->
										<xxf:dialog id="ensemble-performer-menu" appearance="full" level="modal"
											close="true" draggable="true" visible="false">
											<xf:label>Instrument groups</xf:label>
											<xf:repeat nodeset="instance('instrument-groups')/m:instrVoiceGrp[m:instrVoice]" id="ensemble-performer-menu-repeat">
												<xf:trigger submission="replace-form-with" appearance="minimal">
													<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add"/>
														<xf:output ref="if (m:head!='') then m:head else '[single performer]'"/>
													</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:insert context="$binding/m:perfMedium/m:instrumentation/m:instrVoiceGrp[index('repeat-ensemble')]" 
															nodeset="m:instrVoice"
															at="index('repeat-ensemble-performer')"
															position="after" 
															origin="instance('instrument-groups')/m:instrVoiceGrp[m:instrVoice][index('ensemble-performer-menu-repeat')]/m:instrVoice"/>
														<!-- generate IDs for added performers -->
														<xf:insert xxf:iterate="//*[not(@xml:id)]"
															context="$binding/m:perfMedium/m:instrumentation"
															origin="xxf:attribute('xml:id',concat(name(.),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8)))"/>
														<xxf:hide dialog="ensemble-performer-menu"/>
													</xf:action>
												</xf:trigger>
												<h:br/>
											</xf:repeat>
										</xxf:dialog>			
										
										<h:div><h:span class="strong">Performers in this ensemble
											<h:a class="help">&#160;?<h:span class="comment">Optional. An ensemble may be specified by name (above), 
												by a list of performers, or both.</h:span></h:a></h:span>
										</h:div>
										<xf:trigger ref=".[count(m:instrVoice)=0]" style="margin-left: 8px;" class="create_button">
											<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/list.png" alt="Add from list"/> Add from list</xf:label>
											<xf:action ev:event="DOMActivate">
												<xxf:show dialog="ensemble-performer-menu"/>
											</xf:action>
										</xf:trigger>
										<xf:group ref=".[count(m:instrVoice)&gt;0]">
											<h:div class="vertical_spacer"/> 
											<h:span class="fixed_width_mediumlong">No. &amp; name <h:a class="help">&#160;?<h:span 
												class="comment">Enter the number of players in the 
												first input field, and the instrument's name, as it is to be 
												displayed, in the second, e.g. 'vl.1' or 'violin'.
												If no name is entered, a suggested name is inserted when 
												choosing a standard instrument code in the last field.
											</h:span></h:a></h:span>
											<h:span class="fixed_width_long">Standard code <h:a class="help">&#160;?<h:span 
												class="comment">Choosing a standard MARC code improves data  
												compatibility and interchangeability with other systems.<h:br/>
												Also, it may be used to automatically insert the 
												instrument's name in the 'name' field if no name has been entered yet.
											</h:span></h:a></h:span>
											<h:br/>
											<xf:repeat nodeset="m:instrVoice" id="repeat-ensemble-performer">
												<xi:include href="includes/instrvoice-input.xml" parse="xml"/>
												<xf:trigger>
													<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/list.png" alt="Add" title="Add from list"/> Add from list</xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:show dialog="ensemble-performer-menu"/>
													</xf:action>
												</xf:trigger>             
												<dcm:id/>
												<dcm:attribute-editor/>
												<dcm:element-buttons
													triggers="up down add" 
													nodeset="m:instrVoice" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
													index="repeat-ensemble-performer"/>
												<h:span class="editmenu">
													<xxf:dialog id="delete-ensemble-performer-dialog" appearance="full">
														<xf:label>There are references to this performer</xf:label>
														<xf:var name="thisid" select="@xml:id"/>
														<h:p><xf:output value="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$thisid])"/> 
															music component(s) (movements or sections defined below) refer to this
															performer.<h:br/>
															Do you want to delete all occurrences in components also?
														</h:p>
														<xf:trigger>
															<xf:label>No, delete only at this level</xf:label>
															<xf:action ev:event="DOMActivate">
																<xf:delete nodeset="."/>
																<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
																<xxf:hide dialog="delete-ensemble-performer-dialog"/>
																<xf:dispatch name="xforms-value-changed" target="form-group"/>
															</xf:action>
														</xf:trigger>
														<xf:trigger>
															<xf:label>Yes, delete all occurrences</xf:label>
															<xf:action ev:event="DOMActivate">
																<xf:delete nodeset="."/>
																<xf:action xxf:iterate="ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$thisid]">
																	<xf:delete nodeset="."/>
																</xf:action>
																<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
																<xxf:hide dialog="delete-ensemble-performer-dialog"/>
																<xf:dispatch name="xforms-value-changed" target="form-group"/>
															</xf:action>
														</xf:trigger>
														<xf:trigger>
															<xf:label>Cancel</xf:label>
															<xf:action ev:event="DOMActivate">
																<xxf:hide dialog="delete-ensemble-performer-dialog"/>
															</xf:action>
														</xf:trigger>
													</xxf:dialog>												
													<xf:trigger appearance="minimal" style="margin-left:-7px;">
														<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:var name="id" select="@xml:id"/>
															<xf:var name="no" select="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$id])"/>
															<xf:action if="$no = 0">
																<xf:delete nodeset="."/>
																<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
																<xf:dispatch name="xforms-value-changed" target="form-group"/>
															</xf:action>
															<xf:action if="$no != 0">
																<xxf:show dialog="delete-ensemble-performer-dialog"/>
															</xf:action>
														</xf:action>
													</xf:trigger>
												</h:span>
												<h:br/>
											</xf:repeat>
										</xf:group>
									</h:fieldset>
								</xf:repeat>
								
								<!-- stand-alone performers -->
								<h:div class="blocklabel strong">Instruments and singers
									<h:a class="help">&#160;?<h:span class="comment">List of performers not to be regarded 
										as part of an ensemble. Use this section for some chamber music
										(e.g. piano music, songs with or without piano, music for solo instruments)
										and for soloists (vocalists and instrumentalists). 
									</h:span></h:a>
								</h:div>
								<dcm:create
									nodeset="m:instrVoice"
									label="Add performer"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"/>
								<xf:group ref=".[m:instrVoice]">
									<h:div class="vertical_spacer"/> 
									<h:span class="fixed_width_mediumlong">No. &amp; name <h:a class="help">&#160;?<h:span 
										class="comment">Enter the number of players in the 
										first input field, and the instrument's name, as it is to be 
										displayed, in the second, e.g. 'vl.1' or 'violin'.
										If no name is entered, a suggested name is inserted when 
										choosing a standard instrument code in the last field.
									</h:span></h:a></h:span>
									<h:span class="fixed_width_long">Standard code <h:a class="help">&#160;?<h:span 
										class="comment">Choosing a standard MARC code improves data  
										compatibility and interchangeability with other systems.<h:br/>
										Also, it may be used to automatically insert the 
										instrument's name in the 'name' field if no name has been entered yet.
									</h:span></h:a></h:span>
									<h:span class="fixed_width_short" style="text-align:center;">Solo <h:a class="help">&#160;?<h:span 
										class="comment">Mark performers as soloists only when they are to be 
										regarded as soloists as opposed to an ensemble.<h:br/> 
										'Solo' should usually not be used with chamber music or 
										music for one instrument.</h:span></h:a></h:span>
									<h:br/>
									<xf:repeat nodeset="m:instrVoice" id="repeat-performer">
										<xi:include href="includes/instrvoice-input.xml" parse="xml"/>
										<h:span class="fixed_width_short"  style="text-align:center;">
											<xf:input ref="@solo"><xf:label> </xf:label></xf:input>
										</h:span>
										<dcm:element-buttons
											triggers="add up down copy" 
											nodeset="m:instrVoice" 
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
											index="repeat-performer"/>
										<h:span class="editmenu">
											<xxf:dialog id="delete-performer-dialog" appearance="full">
												<xf:label>There are references to this performer</xf:label>
												<xf:var name="thisid" select="@xml:id"/>
												<h:p><xf:output value="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$thisid])"/> 
													music component(s) (movements or sections defined below) refer to this
													performer.<h:br/>
													Do you want to delete all occurrences in components also?
												</h:p>
												<xf:trigger>
													<xf:label>No, delete only at this level</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:delete nodeset="."/>
														<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
														<xxf:hide dialog="delete-performer-dialog"/>
														<xf:dispatch name="xforms-value-changed" target="form-group"/>
													</xf:action>
												</xf:trigger>
												<xf:trigger>
													<xf:label>Yes, delete all occurrences</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:delete nodeset="."/>
														<xf:action xxf:iterate="ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$thisid]">
															<xf:delete nodeset="."/>
														</xf:action>
														<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
														<xxf:hide dialog="delete-performer-dialog"/>
														<xf:dispatch name="xforms-value-changed" target="form-group"/>
													</xf:action>
												</xf:trigger>
												<xf:trigger>
													<xf:label>Cancel</xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:hide dialog="delete-performer-dialog"/>
													</xf:action>
												</xf:trigger>
											</xxf:dialog>												
											<xf:trigger appearance="minimal" style="margin-left:-7px;">
												<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:var name="id" select="@xml:id"/>
													<xf:var name="no" select="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$id])"/>
													<xf:action if="$no = 0">
														<xf:delete nodeset="."/>
														<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
														<xf:dispatch name="xforms-value-changed" target="form-group"/>
													</xf:action>
													<xf:action if="$no != 0">
														<xxf:show dialog="delete-performer-dialog"/>
													</xf:action>
												</xf:action>
											</xf:trigger>
										</h:span>
										<dcm:id/>
										<dcm:attribute-editor/>
										<h:br/>
									</xf:repeat>
								</xf:group>
							</xf:group>
							
							
							<h:div class="blocklabel strong">Roles
								<h:a class="help">&#160;?<h:span class="comment">A list of roles (characters)
									appearing in the piece. Role names may be entered in more than one language.                                        
								</h:span></h:a>                                        
								<xf:group ref="m:castList">
									<dcm:id/>
									<dcm:attribute-editor/>
								</xf:group>
							</h:div>
							<dcm:create nodeset="m:castList"
								label="Add role"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList"/>
							<xf:group ref="m:castList">
								<dcm:create nodeset="m:castItem"
									label="Add role"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem"/>
								<xf:repeat nodeset="m:castItem" id="repeat-cast">
									<dcm:create nodeset="m:role"
										label="Add role"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem/m:role"/>
									<xf:action ev:event="xforms-value-changed">
										<xf:dispatch name="add-id" target="form-group"/>
									</xf:action>
									<h:fieldset>
										<h:legend>
											<xf:output value="if (m:role/m:name[1]!='') then m:role/m:name[1] else '[Role]'"/>
											<dcm:element-buttons
												triggers="add up down" 
												nodeset="m:castItem" 
												index="repeat-cast"
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]"/>
											
											<h:span class="editmenu">
												<xxf:dialog id="delete-cast-dialog" appearance="full">
													<xf:label>There are references to this performer</xf:label>
													<xf:var name="thisid" select="@xml:id"/>
													<h:p><xf:output value="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:instrVoice[@n=$thisid])"/> 
														music component(s) (movements or sections defined below) refer to this
														performer.<h:br/>
														Do you want to delete all occurrences in components also?
													</h:p>
													<xf:trigger>
														<xf:label>No, delete only at this level</xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:delete nodeset="."/>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xxf:hide dialog="delete-cast-dialog"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
													</xf:trigger>
													<xf:trigger>
														<xf:label>Yes, delete all occurrences</xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:delete nodeset="."/>
															<xf:action xxf:iterate="ancestor::*[local-name()='expression'][1]/m:componentGrp//m:castItem[@n=$thisid]">
																<xf:delete nodeset="."/>
															</xf:action>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xxf:hide dialog="delete-cast-dialog"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
													</xf:trigger>
													<xf:trigger>
														<xf:label>Cancel</xf:label>
														<xf:action ev:event="DOMActivate">
															<xxf:hide dialog="delete-cast-dialog"/>
														</xf:action>
													</xf:trigger>
												</xxf:dialog>												
												<xf:trigger appearance="minimal" style="margin-left:-7px;">
													<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:var name="id" select="@xml:id"/>
														<xf:var name="no" select="count(ancestor::*[local-name()='expression'][1]/m:componentGrp//m:castItem[@n=$id])"/>
														<xf:action if="$no = 0">
															<xf:delete nodeset="."/>
															<xf:setvalue ref="instance('temp')/changed" value="'true'"/>
															<xf:dispatch name="xforms-value-changed" target="form-group"/>
														</xf:action>
														<xf:action if="$no != 0">
															<xxf:show dialog="delete-cast-dialog"/>
														</xf:action>
													</xf:action>
												</xf:trigger>
											</h:span>
											
											<dcm:id/>
											<dcm:attribute-editor/>
										</h:legend>
										<xf:group ref="m:role">
											<h:div>
												<xf:group ref=".[not(m:name)]">
													<xf:trigger class="create_button">
														<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add" title="Add row"/>Add name and description</xf:label>
														<xf:action ev:event="DOMActivate">
															<xf:insert context="." origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem/m:role/m:name" 
																nodeset="m:name"/>
															<xf:insert context=".." origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem/m:roleDesc" 
																nodeset="*" at="last()" position="after"/>
														</xf:action>
													</xf:trigger>
												</xf:group>
											<xf:repeat nodeset="m:name" id="repeat-role">
												<h:div>
													<xf:var name="pos" select="position()"/>
													<xf:input ref="."><xf:label>Name: <h:a class="help">&#160;?<h:span
														class="comment">E.g. "Erik", "A servant" or "Villagers"</h:span></h:a></xf:label></xf:input>
													<dcm:id/>
													<dcm:attribute-editor/>
													<xf:input ref="../../m:roleDesc[$pos]" class="long"><xf:label> Description: <h:a class="help">&#160;?<h:span
														class="comment">An optional description of the role, e.g. 
														"King of Denmark" or "Rigoletto's daughter"</h:span></h:a></xf:label></xf:input>
													<dcm:id ref="../../m:roleDesc[$pos]"/>										
													<dcm:attribute-editor ref="../../m:roleDesc[$pos]"/>										
													<xf:select1 ref="@xml:lang" xxf:refresh-items="false">
														<xf:label/>
														<xf:itemset nodeset="instance('languages')/language">
															<xf:label><xf:output value="."/></xf:label>
															<xf:value ref="@xml:id"></xf:value>
														</xf:itemset>
														
														<xf:action ev:event="xforms-value-changed">
															<xf:var name="lang" select="."/>
															<xf:setvalue ref="../../../m:roleDesc[$pos]/@xml:lang" value="$lang"/>
															<!--<xf:setvalue ref="$binding/m:perfMedium/m:castList/m:castItem[index('repeat-cast')]/m:roleDesc[$pos]/@xml:lang" value="$lang"/>-->
														</xf:action>
													</xf:select1>
													<!-- edit buttons --> 
													<h:span class="editmenu" style="margin-left: 8px;">
														<xf:trigger appearance="minimal" class="element-button">
															<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/copy.gif" alt="Copy" title="Duplicate row"/></xf:label>
															<xf:action ev:event="DOMActivate">
																<xf:var name="idx" select="index('repeat-role')"/>
																<xf:insert context="parent::node()" nodeset="m:name" at="$idx"
																	origin="m:name[$idx]"/>
																<xf:insert context="../.." nodeset="m:roleDesc" at="$idx"
																	origin="m:roleDesc[$idx]"/>
																<xf:dispatch name="id-update" target="form-group"/>
															</xf:action>
														</xf:trigger>
														<xf:trigger appearance="minimal" class="element-button">
															<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add" title="Add row"/></xf:label>
															<xf:action ev:event="DOMActivate">
																<xf:var name="idx" select="index('repeat-role')"/>
																<xf:insert context="parent::node()" nodeset="m:name" at="$idx"
																	origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]/m:role/m:name"/>
																<xf:insert context="../.." nodeset="m:roleDesc" at="$idx"
																	origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]/m:roleDesc"/>
																<xf:dispatch name="id-update" target="form-group"/>
															</xf:action>
														</xf:trigger>
														<xf:group ref=".[count(../m:name)=1]">
															<h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove_disabled.gif" class="button_patch"/>
														</xf:group>
														<xf:group ref=".[count(../m:name) &gt; 1]">
															<xf:trigger appearance="minimal" class="element-button">
																<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
																<xf:action ev:event="DOMActivate">
																	<xf:var name="idx" select="index('repeat-role')"/>
																	<xf:delete nodeset="../m:name" at="$idx"/>
																	<xf:delete nodeset="../../m:roleDesc" at="$idx"/>
																	<xf:dispatch name="xforms-value-changed" target="form-group"/>
																</xf:action>
															</xf:trigger>
														</xf:group>
													</h:span>
													<!-- end buttons -->
												</h:div>
											</xf:repeat>
											</h:div>
										</xf:group>
										
										<!-- role performer(s) -->
										<dcm:create
											nodeset="m:instrVoice"
											label="Add performer"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem/m:instrVoice[1]"/>
										<xf:group ref=".[m:instrVoice]">
											<h:div class="vertical_spacer"/> 
											<xf:repeat nodeset="m:instrVoice" id="repeat-role-performer">
												<xf:input ref="." class="mediumshort">
													<xf:label>Voice <h:a class="help">&#160;?<h:span 
														class="comment">Indicates the type of vocalist(s) 
														or vocal ensemble performing this role,
														e.g. "S.", "Soprano" or "Choir (SSATB)".<h:br/>
														If no name is entered, a suggested name is inserted when 
														choosing a standard code in the last field.
													</h:span></h:a></xf:label>
												</xf:input>
												<xf:select1 ref="@code" class="long">
													<xf:label> Standard code <h:a class="help">&#160;?<h:span 
														class="comment">Choosing a standard MARC code optimizes data  
														compatibility and interchangeability with other systems.<h:br/>
														Also, it may be used to automatically insert the 
														voice type in the "Voice" field if none has been entered yet.
													</h:span></h:a></xf:label>
													<xf:item>
														<xf:label>- Please select -</xf:label>
														<xf:value/>
													</xf:item>
													<xf:itemset nodeset="instance('instruments')/m:instrVoice[substring(@code,1,1)='v']">
														<xf:label><xf:output value="concat(@code, ' (',@label,')')"/></xf:label>
														<xf:value ref="@code"/>
													</xf:itemset>
													<xf:itemset nodeset="instance('ensembles')/m:instrVoiceGrp[substring(@code,1,1)='c']">
														<xf:label><xf:output value="concat(@code, ' (',m:head,')')"/></xf:label>
														<xf:value ref="@code"/>
													</xf:itemset>
													<xf:action ev:event="xforms-value-changed">
														<!-- insert voice name (display name) if empty -->
														<xf:var name="instrument" select="."></xf:var>
														<xf:action if="..=''">
															<xf:setvalue ref=".." value="instance('instruments')/m:instrVoice[@code=$instrument]"/>
														</xf:action>
													</xf:action>
												</xf:select1>
												<xf:input ref="@solo"><xf:label> Solo <h:a class="help">&#160;?<h:span 
													class="comment">Mark performers as soloists only when they are to be 
													regarded as soloists as opposed to an ensemble.<h:br/> 
													"Solo" should usually not be used with chamber music or 
													songs.</h:span></h:a></xf:label></xf:input>
												<dcm:element-buttons
													triggers="add up down copy remove" 
													nodeset="m:instrVoice" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
													index="repeat-performer"/>
												<dcm:id/>
												<dcm:attribute-editor/>
												<h:br/>
											</xf:repeat>
										</xf:group>
										<!-- end role performer(s) -->
										
									</h:fieldset>
								</xf:repeat>
							</xf:group>
							
						</xf:group>
						
					</h:fieldset>
					
					<!-- Components  -->
					<h:fieldset>
						<h:legend>Components <h:a class="help">&#160;?<h:span class="comment">Use components to list the individual 
							pieces (movements, acts, scenes, sections etc.) that constitute this 
							<xf:group ref=".[count(../m:expression)=1]">
								work.
							</xf:group>
							<xf:group ref=".[count(../m:expression)&gt;1]">
								version.
							</xf:group><h:br/>
							If there is no subdivision at this level, no components should be defined.<h:br/>
							Components may be nested to define several layers of components (e.g. a work 
							divided into acts, each divided into scenes)
						</h:span></h:a>
							<dcm:attribute-editor ref="m:componentGrp"/>
						</h:legend>
						<dcm:create 
							nodeset="m:componentGrp"
							label="Add component group"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
						<xf:group ref="m:componentGrp">
							<dcm:create
								nodeset="m:expression"
								label="Add components"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
							<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
								<xf:repeat nodeset="m:expression" id="component-list1">
									<h:tr class="hoverclass">
										<h:td>
											<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
											<xf:output 
												value="m:titleStmt/m:title"/><xf:group 
													ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
											<xf:output value="m:tempo"/>
											<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
												[No number, title or tempo] 
											</xf:group>
											&#160;
										</h:td>
										<h:td style="text-align:right;">
											<xf:group ref=".[instance('temp')/file_exists='true']">
												<xf:trigger appearance="minimal">
													<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:var name="uri" 
															select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
														<xf:action if="instance('temp')/changed='true'">
															<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
															<xxf:show dialog="exit-warning-dialog"/>
														</xf:action>	
														<xf:action if="instance('temp')/changed='false'">
															<xf:load resource="{$uri}" show="replace"/>
														</xf:action>
													</xf:action>
												</xf:trigger>
											</xf:group>
											<xf:group ref=".[instance('temp')/file_exists!='true']">
												<h:small>File must be saved before components can be edited</h:small>
											</xf:group>
										</h:td>
										<h:td class="buttons_cell" style="text-align:right; white-space:nowrap;">
											
											<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left_disabled.png" class="button_patch"/>
											
											<xf:var name="tooManySublevels" select="m:componentGrp/m:expression/m:componentGrp/m:expression"/> 
											<xf:var name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
											<xf:group ref=".[not($expTarget)]">
												<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
											</xf:group>
											<xf:trigger appearance="minimal" ref=".[$expTarget]">
												<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:var name="expOrig" select="."/>
													<xf:action if="not($expTarget/m:componentGrp)">
														<!-- insert <componentGrp> if it doesn't exist -->
														<xf:var name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
														<!-- move the componentGrp into place according to the empty model if necessary-->
														<xf:var name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
															and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
															<xf:var name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
															<xf:insert context="$expTarget" origin="m:componentGrp"
																nodeset="*" at="$pos+1" position="after"/>
															<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
														</xf:action>
													</xf:action>
													<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
													<xf:delete context="." nodeset="." at="index('component-list1')"/>
												</xf:action>
											</xf:trigger>
											
											<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list1" 
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
											<dcm:id/>
											<dcm:attribute-editor/>
										</h:td>
									</h:tr>
									
									<!-- 1st sub-level -->
									<h:tr>
										<h:td colspan="3">
											<xf:group ref="m:componentGrp">
												<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
													<xf:repeat nodeset="m:expression" id="component-list2">
														<h:tr class="hoverclass">
															<h:td class="tree_cell">
																<xf:group ref=".[count(following-sibling::*)=0]">
																	<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-1.png" alt="sub-element"></h:img>&#160;
																</xf:group>
																<xf:group ref=".[count(following-sibling::*)!=0]">
																	<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-2.png" alt="sub-element"></h:img>&#160;
																</xf:group>
															</h:td>
															<h:td>
																<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																	ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																<xf:output value="m:tempo"/>
																<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
																	[No number, title or tempo] 
																</xf:group>
																&#160;
															</h:td>
															<h:td style="text-align:right;">
																<xf:group ref=".[instance('temp')/file_exists='true']">
																	<xf:trigger appearance="minimal">
																		<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
																		<xf:action ev:event="DOMActivate">
																			<xf:var name="uri" 
																				select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																			<xf:action if="instance('temp')/changed='true'">
																				<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																				<xxf:show dialog="exit-warning-dialog"/>
																			</xf:action>	
																			<xf:action if="instance('temp')/changed='false'">
																				<xf:load resource="{$uri}" show="replace"/>
																			</xf:action>
																		</xf:action>
																	</xf:trigger>
																</xf:group>
																<xf:group ref=".[instance('temp')/file_exists!='true']">
																	<h:small>File must be saved before components can be edited</h:small>
																</xf:group>
															</h:td>
															<h:td class="buttons_cell" style="text-align:right; white-space: nowrap;">
																
																<xf:trigger appearance="minimal">
																	<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xf:var name="origin" select="."/>
																		<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list1')" position="after"/>
																		<xf:delete nodeset="."/>
																	</xf:action>
																</xf:trigger>
																
																<xf:var name="tooManySublevels" select="m:componentGrp/m:expression"/> 
																<xf:var name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
																<xf:group ref=".[not($expTarget)]">
																	<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
																</xf:group>
																<xf:trigger appearance="minimal" ref=".[$expTarget]">
																	<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xf:var name="expOrig" select="."/>
																		<xf:action if="not($expTarget/m:componentGrp)">
																			<!-- insert <componentGrp> if it doesn't exist -->
																			<xf:var name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
																			<!-- move the componentGrp into place according to the empty model if necessary-->
																			<xf:var name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
																				and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
																				<xf:var name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
																				<xf:insert context="$expTarget" origin="m:componentGrp"
																					nodeset="*" at="$pos+1" position="after"/>
																				<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
																			</xf:action>
																		</xf:action>
																		<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
																		<xf:delete context="." nodeset="." at="index('component-list1')"/>
																	</xf:action>
																</xf:trigger>
																
																<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list2" 
																	origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																<dcm:id/>
																<dcm:attribute-editor/>
															</h:td>
														</h:tr>
														
														<!-- 2nd sub-level -->
														<h:tr>
															<h:td colspan="4">
																<xf:group ref="m:componentGrp">
																	<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
																		<xf:repeat nodeset="m:expression" id="component-list3">
																			<h:tr class="hoverclass">
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(../../following-sibling::*)!=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-3.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(../../following-sibling::*)=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/spacer.png" width="22" alt="spacer"/>
																					</xf:group>
																				</h:td>
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(following-sibling::*)=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-1.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(following-sibling::*)!=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-2.png" alt="sub-element"/>
																					</xf:group>
																				</h:td>
																				<h:td>
																					<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																					<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																						ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																					<xf:output value="m:tempo"/>
																					<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']">
																						[No number, title or tempo] 
																					</xf:group>
																					&#160;
																				</h:td>
																				<h:td style="text-align:right;">
																					<xf:group ref=".[instance('temp')/file_exists='true']">
																						<xf:trigger appearance="minimal">
																							<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
																							<xf:action ev:event="DOMActivate">
																								<xf:var name="uri" 
																									select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																								<xf:action if="instance('temp')/changed='true'">
																									<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																									<xxf:show dialog="exit-warning-dialog"/>
																								</xf:action>	
																								<xf:action if="instance('temp')/changed='false'">
																									<xf:load resource="{$uri}" show="replace"/>
																								</xf:action>
																							</xf:action>
																						</xf:trigger>
																					</xf:group>
																					<xf:group ref=".[instance('temp')/file_exists!='true']">
																						<h:small>File must be saved before components can be edited</h:small>
																					</xf:group>
																				</h:td>
																				<h:td class="buttons_cell" style="text-align:right; white-space: nowrap;">
																					
																					<xf:trigger appearance="minimal">
																						<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																						<xf:action ev:event="DOMActivate">
																							<xf:var name="origin" select="."/>
																							<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list2')" position="after"/>
																							<xf:delete nodeset="."/>
																						</xf:action>
																					</xf:trigger>
																					
																					<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/>
																					
																					<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list3" 
																						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																					<dcm:id/>
																					<dcm:attribute-editor/>
																				</h:td>
																			</h:tr>
																		</xf:repeat>
																	</h:table>
																</xf:group>
															</h:td>
														</h:tr>
														<!-- end 2nd sub-level -->
														
													</xf:repeat>
												</h:table>
											</xf:group>
										</h:td>
									</h:tr>
									<!-- end 1st sub-level -->
									
								</xf:repeat>
							</h:table>
						</xf:group>
					</h:fieldset>
					
				</h:fieldset>
				
				<h:div class="vertical_spacer"/>
				<h:div class="vertical_spacer"/>
				
			</xf:repeat>
			
		</xf:group>
		
	</h:div>
	<xi:include href="includes/relation-dialog.xml" parse="xml"/>
	<xi:include href="includes/code-inspector.xml" parse="xml"/>
	<h:br clear="all"/>
	
</h:div>
